{"ast":null,"code":"var _jsxFileName = \"/Users/eileenli/Desktop/face-detection/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = '7de6dc495cc446809746bff75fe8eb2d';\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = 'clarifai';\nconst APP_ID = 'main';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'general-image-recognition';\nconst MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';\nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n  },\n  \"inputs\": [{\n    \"data\": {\n      \"image\": {\n        \"url\": IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onBtnSubmit = () => {\n      console.log('click');\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#FFEE00\",\n        num: 100,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onBtnSubmit: this.onBtnSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","console","log","catch","error","App","constructor","onInputChange","event","target","value","onBtnSubmit","state","input","render","className","children","color","num","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/eileenli/Desktop/face-detection/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = '7de6dc495cc446809746bff75fe8eb2d';\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = 'clarifai';       \nconst APP_ID = 'main';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'general-image-recognition';\nconst MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\nconst raw = JSON.stringify({\n   \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n   },\n   \"inputs\": [\n      {\n            \"data\": {\n               \"image\": {\n                  \"url\": IMAGE_URL\n               }\n            }\n      }\n   ]\n});\n\nconst requestOptions = {\n   method: 'POST',\n   headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n   },\n   body: raw\n};\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + \"/outputs\", requestOptions)\n   .then(response => response.text())\n   .then(result => console.log(result))\n   .catch(error => console.log('error', error));\n\nclass App extends Component {\n   constructor(){\n      super();\n      this.state = {\n         input: '',\n      }\n   }\n\n   onInputChange = (event) => {\n      console.log(event.target.value);\n   }\n\n   onBtnSubmit = () => {\n      console.log('click');\n   }\n\n   render() {\n      return (\n         <div className=\"App\">\n         <ParticlesBg color=\"#FFEE00\" num={100} type=\"cobweb\" bg={true}/>\n         <Navigation />\n         <Logo />\n         <ImageLinkForm onInputChange={this.onInputChange} onBtnSubmit={this.onBtnSubmit}/>\n         <Rank />\n         {/* \n            \n            <FaceDetection /> */}\n\n         </div>\n      );\n   };\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}